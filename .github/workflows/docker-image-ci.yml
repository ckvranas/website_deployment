name: Docker image for CI

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE: evrachr/website_deployment
  DOCKER_TAG: v3      
  PORT: 4000

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: ./

      - name: Login to Docker Hub   
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}    

      - name: Build Docker image
        run: |
          cd ${GITHUB_WORKSPACE}/docker
          docker build -f ./Dockerfile.txt -t $DOCKER_IMAGE:$DOCKER_TAG .

      - name: Run Docker image
        run: |
          # Run in detached mode the web-server
          /usr/bin/bash -c "docker run -p $PORT:$PORT $DOCKER_IMAGE:$DOCKER_TAG" &
          sleep 8
          curl -X GET http://localhost:$PORT
          if [ $? -eq 0 ]; then
            echo "HTTP response successful, pushing image to Docker Hub"
          else
            echo "HTTP response failed, not pushing image to Docker Hub"
          fi 

      - name: Push to Docker Hub
        run: |
            docker tag $DOCKER_IMAGE:$DOCKER_TAG $DOCKER_IMAGE:latest
            docker push $DOCKER_IMAGE:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: ./

      - name: Login to Docker Hub   
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install K8S CLI
        run: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubectl
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Create Kubernetes cluster
        run: |
          kind create cluster --name test-cluster    

      - name: Deploy application
        run: |
          kubectl apply -f ${GITHUB_WORKSPACE}/kubernetes/web-app-deploy.yaml
          kubectl rollout status deployment/web-app

      - name: Create service
        run: |
          kubectl apply -f ${GITHUB_WORKSPACE}/kubernetes/web-app-service.yaml
                  
      - name: Test out the deployment
        run: |
          kubectl get all
          kubectl port-forward svc/web-app $PORT:$PORT &
          sleep 5
          curl -X GET http://localhost:$PORT
          if [ $? -eq 0 ]; then
            echo "Deployment is up and running!"
            echo "Stop port-forwarding..."
            kill -9 $(lsof -i :$PORT -t)
          else
            echo "Deployment failed!"
          fi 

      - name: Delete Kubernetes cluster
        run: |
          kind delete cluster --name test-cluster     




